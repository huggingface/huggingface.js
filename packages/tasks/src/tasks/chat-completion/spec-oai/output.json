{
	"$id": "/inference/schemas/chat-completion/output.json",
	"$schema": "http://json-schema.org/draft-06/schema#",
	"description": "Chat Completion Output.\n\nAuto-generated from OAI specs.\nFor more details, check out https://github.com/huggingface/huggingface.js/blob/main/packages/tasks/scripts/inference-oai-import.ts.",
	"title": "ChatCompletionOutput",
	"type": "object",
	"required": ["choices", "created", "id", "model", "object"],
	"properties": {
		"id": {
			"type": "string",
			"description": "A unique identifier for the chat completion."
		},
		"choices": {
			"type": "array",
			"description": "A list of chat completion choices. Can be more than one if `n` is greater than 1.",
			"items": {
				"type": "object",
				"required": ["finish_reason", "index", "message", "logprobs"],
				"properties": {
					"finish_reason": {
						"type": "string",
						"description": "The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,\n`length` if the maximum number of tokens specified in the request was reached,\n`content_filter` if content was omitted due to a flag from our content filters,\n`tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.\n",
						"enum": ["stop", "length", "tool_calls", "content_filter", "function_call"]
					},
					"index": {
						"type": "integer",
						"description": "The index of the choice in the list of choices."
					},
					"message": {
						"$ref": "#/$defs/ChatCompletionOutputResponseMessage"
					},
					"logprobs": {
						"description": "Log probability information for the choice.",
						"type": "object",
						"nullable": true,
						"properties": {
							"content": {
								"description": "A list of message content tokens with log probability information.",
								"type": "array",
								"items": {
									"$ref": "#/$defs/ChatCompletionOutputTokenLogprob"
								},
								"nullable": true
							},
							"refusal": {
								"description": "A list of message refusal tokens with log probability information.",
								"type": "array",
								"items": {
									"$ref": "#/$defs/ChatCompletionOutputTokenLogprob"
								},
								"nullable": true
							}
						},
						"required": ["content", "refusal"],
						"title": "ChatCompletionOutputLogprobs"
					}
				},
				"title": "ChatCompletionOutputChoicesItem"
			}
		},
		"created": {
			"type": "integer",
			"description": "The Unix timestamp (in seconds) of when the chat completion was created."
		},
		"model": {
			"type": "string",
			"description": "The model used for the chat completion."
		},
		"service_tier": {
			"description": "The service tier used for processing the request.",
			"type": "string",
			"enum": ["scale", "default"],
			"example": "scale",
			"nullable": true
		},
		"system_fingerprint": {
			"type": "string",
			"description": "This fingerprint represents the backend configuration that the model runs with.\n\nCan be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.\n"
		},
		"object": {
			"type": "string",
			"description": "The object type, which is always `chat.completion`.",
			"enum": ["chat.completion"],
			"x-stainless-const": true
		},
		"usage": {
			"$ref": "#/$defs/ChatCompletionOutputCompletionUsage"
		}
	},
	"$defs": {
		"ChatCompletionOutputResponseMessage": {
			"type": "object",
			"description": "A chat completion message generated by the model.",
			"properties": {
				"content": {
					"type": "string",
					"description": "The contents of the message.",
					"nullable": true
				},
				"refusal": {
					"type": "string",
					"description": "The refusal message generated by the model.",
					"nullable": true
				},
				"tool_calls": {
					"$ref": "#/$defs/ChatCompletionOutputMessageToolCalls"
				},
				"annotations": {
					"type": "array",
					"description": "Annotations for the message, when applicable, as when using the\n[web search tool](/docs/guides/tools-web-search?api-mode=chat).\n",
					"items": {
						"type": "object",
						"description": "A URL citation when using web search.\n",
						"required": ["type", "url_citation"],
						"properties": {
							"type": {
								"type": "string",
								"description": "The type of the URL citation. Always `url_citation`.",
								"enum": ["url_citation"],
								"x-stainless-const": true
							},
							"url_citation": {
								"type": "object",
								"description": "A URL citation when using web search.",
								"required": ["end_index", "start_index", "url", "title"],
								"properties": {
									"end_index": {
										"type": "integer",
										"description": "The index of the last character of the URL citation in the message."
									},
									"start_index": {
										"type": "integer",
										"description": "The index of the first character of the URL citation in the message."
									},
									"url": {
										"type": "string",
										"description": "The URL of the web resource."
									},
									"title": {
										"type": "string",
										"description": "The title of the web resource."
									}
								},
								"title": "ChatCompletionOutputResponseMessageUrlCitation"
							}
						},
						"title": "ChatCompletionOutputResponseMessageAnnotationsItem"
					}
				},
				"role": {
					"type": "string",
					"enum": ["assistant"],
					"description": "The role of the author of this message.",
					"x-stainless-const": true
				},
				"function_call": {
					"type": "object",
					"deprecated": true,
					"description": "Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.",
					"properties": {
						"arguments": {
							"type": "string",
							"description": "The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function."
						},
						"name": {
							"type": "string",
							"description": "The name of the function to call."
						}
					},
					"required": ["name", "arguments"],
					"title": "ChatCompletionOutputResponseMessageFunctionCall"
				},
				"audio": {
					"type": "object",
					"nullable": true,
					"description": "If the audio output modality is requested, this object contains data\nabout the audio response from the model. [Learn more](/docs/guides/audio).\n",
					"x-oaiExpandable": true,
					"required": ["id", "expires_at", "data", "transcript"],
					"properties": {
						"id": {
							"type": "string",
							"description": "Unique identifier for this audio response."
						},
						"expires_at": {
							"type": "integer",
							"description": "The Unix timestamp (in seconds) for when this audio response will\nno longer be accessible on the server for use in multi-turn\nconversations.\n"
						},
						"data": {
							"type": "string",
							"description": "Base64 encoded audio bytes generated by the model, in the format\nspecified in the request.\n"
						},
						"transcript": {
							"type": "string",
							"description": "Transcript of the audio generated by the model."
						}
					},
					"title": "ChatCompletionOutputResponseMessageAudio"
				}
			},
			"required": ["role", "content", "refusal"],
			"title": "ChatCompletionOutputResponseMessage"
		},
		"ChatCompletionOutputMessageToolCalls": {
			"type": "array",
			"description": "The tool calls generated by the model, such as function calls.",
			"items": {
				"$ref": "#/$defs/ChatCompletionOutputMessageToolCall"
			},
			"title": "ChatCompletionOutputMessageToolCalls"
		},
		"ChatCompletionOutputMessageToolCall": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string",
					"description": "The ID of the tool call."
				},
				"type": {
					"type": "string",
					"enum": ["function"],
					"description": "The type of the tool. Currently, only `function` is supported.",
					"x-stainless-const": true
				},
				"function": {
					"type": "object",
					"description": "The function that the model called.",
					"properties": {
						"name": {
							"type": "string",
							"description": "The name of the function to call."
						},
						"arguments": {
							"type": "string",
							"description": "The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function."
						}
					},
					"required": ["name", "arguments"],
					"title": "ChatCompletionOutputMessageToolCallFunction"
				}
			},
			"required": ["id", "type", "function"],
			"title": "ChatCompletionOutputMessageToolCall"
		},
		"ChatCompletionOutputTokenLogprob": {
			"type": "object",
			"properties": {
				"token": {
					"description": "The token.",
					"type": "string"
				},
				"logprob": {
					"description": "The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.",
					"type": "number"
				},
				"bytes": {
					"description": "A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.",
					"type": "array",
					"items": {
						"type": "integer"
					},
					"nullable": true
				},
				"top_logprobs": {
					"description": "List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned.",
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"token": {
								"description": "The token.",
								"type": "string"
							},
							"logprob": {
								"description": "The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.",
								"type": "number"
							},
							"bytes": {
								"description": "A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.",
								"type": "array",
								"items": {
									"type": "integer"
								},
								"nullable": true
							}
						},
						"required": ["token", "logprob", "bytes"],
						"title": "ChatCompletionOutputTokenLogprobTopLogprobsItem"
					}
				}
			},
			"required": ["token", "logprob", "bytes", "top_logprobs"],
			"title": "ChatCompletionOutputTokenLogprob"
		},
		"ChatCompletionOutputCompletionUsage": {
			"type": "object",
			"description": "Usage statistics for the completion request.",
			"properties": {
				"completion_tokens": {
					"type": "integer",
					"default": 0,
					"description": "Number of tokens in the generated completion."
				},
				"prompt_tokens": {
					"type": "integer",
					"default": 0,
					"description": "Number of tokens in the prompt."
				},
				"total_tokens": {
					"type": "integer",
					"default": 0,
					"description": "Total number of tokens used in the request (prompt + completion)."
				},
				"completion_tokens_details": {
					"type": "object",
					"description": "Breakdown of tokens used in a completion.",
					"properties": {
						"accepted_prediction_tokens": {
							"type": "integer",
							"default": 0,
							"description": "When using Predicted Outputs, the number of tokens in the\nprediction that appeared in the completion.\n"
						},
						"audio_tokens": {
							"type": "integer",
							"default": 0,
							"description": "Audio input tokens generated by the model."
						},
						"reasoning_tokens": {
							"type": "integer",
							"default": 0,
							"description": "Tokens generated by the model for reasoning."
						},
						"rejected_prediction_tokens": {
							"type": "integer",
							"default": 0,
							"description": "When using Predicted Outputs, the number of tokens in the\nprediction that did not appear in the completion. However, like\nreasoning tokens, these tokens are still counted in the total\ncompletion tokens for purposes of billing, output, and context window\nlimits.\n"
						}
					},
					"title": "ChatCompletionOutputCompletionUsageCompletionTokensDetails"
				},
				"prompt_tokens_details": {
					"type": "object",
					"description": "Breakdown of tokens used in the prompt.",
					"properties": {
						"audio_tokens": {
							"type": "integer",
							"default": 0,
							"description": "Audio input tokens present in the prompt."
						},
						"cached_tokens": {
							"type": "integer",
							"default": 0,
							"description": "Cached tokens present in the prompt."
						}
					},
					"title": "ChatCompletionOutputCompletionUsagePromptTokensDetails"
				}
			},
			"required": ["prompt_tokens", "completion_tokens", "total_tokens"],
			"title": "ChatCompletionOutputCompletionUsage"
		}
	}
}
